{"version":3,"sources":["logo.svg","page/util.js","page/users.js","App.js","reportWebVitals.js","index.js"],"names":["users","_","map","Array","item","index","key","id","name","mobile","email","address","layout","labelCol","span","wrapperCol","tailLayout","offset","WrappedCompoment","hoc","props","useForm","form","React","useEffect","editVisible","setFieldsValue","editItem","style","padding","display","justifyContent","alignItems","marginBottom","width","placeholder","onChange","e","search","target","value","marginRight","type","onClick","addUser","current","page","pageSize","size","total","showSizeChanger","showTotal","paginationChange","columns","title","dataIndex","render","record","edit","onConfirm","delete","okText","cancelText","dataSource","pagination","destroyOnClose","footer","visible","onCancel","onFinish","onOk","Item","hidden","label","rules","required","htmlType","marginLeft","mockPagination","newUsers","chain","slice","result","state","filter","user","includes","setState","isEmpty","length","cloneDeep","splice","values","push","this","Component","App","exact","path","component","Users","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c618f26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import _ from 'lodash'\r\n\r\nexport const users = _.map(new Array(100) ,(item,index)=>  {\r\n    let user = {\r\n        key: index,\r\n        id:`user-${index}`,\r\n        name: `Disabled User-${index + 1}`,\r\n        mobile: '15160945242',\r\n        email: 'aa@lib.com',\r\n        address: 'Sidney No. 78 Lake Park',\r\n    }\r\n    return user;\r\n});","import React from 'react';\r\nimport { Button, Card, Input, Pagination, Table, Modal, Form, Popconfirm } from 'antd'\r\nimport { users } from './util';\r\nimport _ from 'lodash'\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16, span: 24 },\r\n};\r\nfunction Users (props) {\r\n    const [form] = Form.useForm();\r\n    React.useEffect(() => {\r\n        if (props.editVisible) {\r\n            form.setFieldsValue({ ...props.editItem })\r\n        }\r\n    }, [props.editVisible])\r\n    return <Card style={{ padding: 15 }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 15 }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '50%' }}>\r\n                <Input placeholder='请输入姓名/手机/邮箱查询' onChange={e => props.search(e.target.value)} style={{ marginRight: 15 }} />\r\n                <Button type=\"primary\" onClick={props.addUser}>添加人员</Button>\r\n            </div>\r\n            <Pagination\r\n                current={props.page}\r\n                pageSize={props.size}\r\n                total={props.total}\r\n                showSizeChanger={false}\r\n                showTotal={total => `共 ${total} 条`}\r\n                onChange={props.paginationChange}\r\n            />\r\n        </div>\r\n        <Table\r\n            columns={[\r\n                {\r\n                    title: '序号',\r\n                    dataIndex: 'key',\r\n                    render: index => index + 1,\r\n                },\r\n                {\r\n                    title: '姓名',\r\n                    dataIndex: 'name',\r\n                },\r\n                {\r\n                    title: '手机号',\r\n                    dataIndex: 'mobile',\r\n                },\r\n                {\r\n                    title: '邮箱',\r\n                    dataIndex: 'email',\r\n                },\r\n                {\r\n                    title: '地址',\r\n                    dataIndex: 'address',\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    dataIndex: 'operation',\r\n                    render: (item, record) =>\r\n                        <div>\r\n                            <a style={{ marginRight: 15 }} onClick={() => props.edit(record)}>编辑</a>\r\n                            <Popconfirm\r\n                                title='确定要删除此条内容?'\r\n                                onConfirm={() => props.delete(record.key)}\r\n                                okText=\"确认\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                <a>删除</a>\r\n                            </Popconfirm>\r\n                        </div>\r\n\r\n                },\r\n            ]}\r\n            dataSource={props.users}\r\n            pagination={false}\r\n        />\r\n        <Modal\r\n            title=\"添加人员\"\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n            destroyOnClose\r\n            footer={null}\r\n            visible={props.visible}\r\n            onCancel={props.onCancel}\r\n        >\r\n\r\n            <Form {...layout} form={form} name=\"control-hooks\" onFinish={props.onOk}>\r\n                <Form.Item hidden name=\"id\" label=\"id\" >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item hidden name=\"key\" label=\"key\" >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"name\" label=\"姓名\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"mobile\" label=\"手机\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"email\" label=\"邮箱\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\" label=\"地址\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button htmlType=\"button\" onClick={props.onCancel}>取消</Button>\r\n                    <Button style={{ marginLeft: 15 }} type=\"primary\" htmlType=\"submit\">确认</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    </Card>\r\n}\r\n\r\nlet hoc = WrappedCompoment => {\r\n    return class EnhancedComponent extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                users: this.mockPagination(1, 20, users),\r\n                page: 1,\r\n                size: 20,\r\n                total: users.length,\r\n                visible: false,\r\n                editItem: null,\r\n                editVisible: false\r\n            }\r\n            this.page = 1\r\n            this.size = 20\r\n            this.total = 0\r\n        }\r\n\r\n        // 模拟分页\r\n        mockPagination = (page, pageSize, newUsers) => _.chain(newUsers ? newUsers : users).slice((page - 1) * pageSize, page * pageSize).value()\r\n\r\n        search = value => {\r\n            let result = users;\r\n            if (value) {\r\n                result = _.chain(this.mockPagination(this.state.page, this.state.size))\r\n                    .filter(user => _.includes(user.name, value) || _.includes(user.mobile, value) || _.includes(user.email, value))\r\n                    .value();\r\n                this.setState({\r\n                    users: result,\r\n                    page: _.isEmpty(result) ? 1 : this.state.page,\r\n                    size: _.isEmpty(result) ? 20 : this.state.size,\r\n                    total: _.isEmpty(result) ? 0 : this.state.total\r\n                })\r\n            } else {// 查询条件为空时  还原原本的数据\r\n                this.setState({\r\n                    page: this.page,\r\n                    size: this.size,\r\n                    total: users.length,\r\n                    users: this.mockPagination(this.page, this.size, _.cloneDeep(users))\r\n                })\r\n            }\r\n        }\r\n        paginationChange = (page, pageSize) => {\r\n            this.page = page\r\n            this.size = pageSize\r\n            this.setState({\r\n                page,\r\n                pageSize,\r\n                users: this.mockPagination(page, pageSize, _.cloneDeep(users))\r\n            })\r\n        }\r\n\r\n        addUser = () => {\r\n            this.setState({ visible: true, editVisible: false });\r\n        }\r\n        edit = editItem => {\r\n            this.setState({ visible: true, editVisible: true, editItem });\r\n        }\r\n\r\n        delete = index => {\r\n            users.splice(index, 1)\r\n            this.setState({ users: this.mockPagination(this.page, this.size, users), total: users.length })\r\n        }\r\n        onOk = values => {\r\n            let result = users\r\n            if (this.state.editVisible) { // 编辑\r\n                result = _.chain(result).map((user) => values.id === user.id ? user = values : user).value()\r\n            } else {\r\n                let item = {\r\n                    ...values,\r\n                    key: users.length\r\n                };\r\n                result.push(item)\r\n            }\r\n\r\n            this.setState({\r\n                users: this.mockPagination(this.page, this.size, result),\r\n                total: users.length,\r\n                visible: false,\r\n                editVisible: false,\r\n                page: this.page,\r\n                size: this.size\r\n            })\r\n        }\r\n        render () {\r\n            return <WrappedCompoment\r\n                {...this.state}\r\n                search={this.search}\r\n                addUser={this.addUser}\r\n                visible={this.state.visible}\r\n                onOk={this.onOk}\r\n                edit={this.edit}\r\n                delete={this.delete}\r\n                onCancel={() => this.setState({ visible: false, editVisible: false })}\r\n                paginationChange={this.paginationChange}\r\n            />\r\n        }\r\n    }\r\n}\r\n\r\nexport default hoc(Users)","import logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Users from './page/users';\n\nfunction App() {\n  return (\n    <Switch>\n        <Route exact path='/' component={Users}/>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  { BrowserRouter}  from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}